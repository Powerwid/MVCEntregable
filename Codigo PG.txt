------------------------------Creacion de Tablas------------------------------

------------Tabla de Usuarios------------
CREATE TABLE Usuarios (
    id_usuario SERIAL PRIMARY KEY,
    correo VARCHAR(255) NOT NULL UNIQUE,
    contrasena VARCHAR(255) NOT NULL,
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
    rol VARCHAR(20) NOT NULL CHECK (rol IN ('admin', 'empleado')),
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

------------Tabla de Clientes------------
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre_empresa VARCHAR(100) NOT NULL,
    correo VARCHAR(255) NOT NULL UNIQUE,
    telefono VARCHAR(20),
    direccion TEXT,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

------------Tabla de Proyectos------------
CREATE TABLE Proyectos (
    id_proyecto SERIAL PRIMARY KEY,
    id_cliente INT NOT NULL,
    nombre_proyecto VARCHAR(100) NOT NULL,
    descripcion TEXT,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE,
    estado VARCHAR(20) NOT NULL CHECK (estado IN ('pendiente', 'en_progreso', 'completado')),
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente) ON DELETE CASCADE
);

------------Tabla de Asignaciones de Proyectos------------
CREATE TABLE Asignaciones_Proyectos (
    id_asignacion SERIAL PRIMARY KEY,
    id_proyecto INT NOT NULL,
    id_usuario INT NOT NULL,
    rol_en_proyecto VARCHAR(50),
    fecha_asignacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_proyecto) REFERENCES Proyectos(id_proyecto) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario) ON DELETE CASCADE,
    UNIQUE (id_proyecto, id_usuario)
);

-- Insertar un usuario admin por defecto para pruebas
INSERT INTO Usuarios (correo, contrasena, nombre, apellido, rol) 
VALUES ('kleyn@tecnosoluciones.com', 'kleyn123', 'Kleyn', 'Mamani Perez', 'admin');

-- Procedimientos Almacenados para Usuarios
-- Guardar un usuario
CREATE OR REPLACE PROCEDURE guardar_usuario(
    p_correo VARCHAR,
    p_contrasena VARCHAR,
    p_nombre VARCHAR,
    p_apellido VARCHAR,
    p_rol VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO Usuarios (correo, contrasena, nombre, apellido, rol)
    VALUES (p_correo, p_contrasena, p_nombre, p_apellido, p_rol);
END;
$$;

-- Modificar un usuario
CREATE OR REPLACE PROCEDURE modificar_usuario(
    p_id_usuario INT,
    p_correo VARCHAR,
    p_contrasena VARCHAR,
    p_nombre VARCHAR,
    p_apellido VARCHAR,
    p_rol VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE Usuarios 
    SET correo = p_correo,
        contrasena = p_contrasena,
        nombre = p_nombre,
        apellido = p_apellido,
        rol = p_rol
    WHERE id_usuario = p_id_usuario;
END;
$$;

-- Eliminar un usuario
CREATE OR REPLACE PROCEDURE eliminar_usuario(p_id_usuario INT)
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM Usuarios WHERE id_usuario = p_id_usuario;
END;
$$;

-- Procedimientos Almacenados para Clientes
-- Guardar un cliente
CREATE OR REPLACE PROCEDURE guardar_cliente(
    p_nombre_empresa VARCHAR,
    p_correo VARCHAR,
    p_telefono VARCHAR,
    p_direccion TEXT
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO Clientes (nombre_empresa, correo, telefono, direccion)
    VALUES (p_nombre_empresa, p_correo, p_telefono, p_direccion);
END;
$$;

-- Modificar un cliente
CREATE OR REPLACE PROCEDURE modificar_cliente(
    p_id_cliente INT,
    p_nombre_empresa VARCHAR,
    p_correo VARCHAR,
    p_telefono VARCHAR,
    p_direccion TEXT
)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE Clientes 
    SET nombre_empresa = p_nombre_empresa,
        correo = p_correo,
        telefono = p_telefono,
        direccion = p_direccion
    WHERE id_cliente = p_id_cliente;
END;
$$;

-- Eliminar un cliente
CREATE OR REPLACE PROCEDURE eliminar_cliente(p_id_cliente INT)
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM Clientes WHERE id_cliente = p_id_cliente;
END;
$$;

-- Procedimientos Almacenados para Proyectos
-- Guardar un proyecto
CREATE OR REPLACE PROCEDURE guardar_proyecto(
    p_id_cliente INT,
    p_nombre_proyecto VARCHAR,
    p_descripcion TEXT,
    p_fecha_inicio DATE,
    p_fecha_fin DATE,
    p_estado VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO Proyectos (id_cliente, nombre_proyecto, descripcion, fecha_inicio, fecha_fin, estado)
    VALUES (p_id_cliente, p_nombre_proyecto, p_descripcion, p_fecha_inicio, p_fecha_fin, p_estado);
END;
$$;

-- Modificar un proyecto
CREATE OR REPLACE PROCEDURE modificar_proyecto(
    p_id_proyecto INT,
    p_id_cliente INT,
    p_nombre_proyecto VARCHAR,
    p_descripcion TEXT,
    p_fecha_inicio DATE,
    p_fecha_fin DATE,
    p_estado VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE Proyectos 
    SET id_cliente = p_id_cliente,
        nombre_proyecto = p_nombre_proyecto,
        descripcion = p_descripcion,
        fecha_inicio = p_fecha_inicio,
        fecha_fin = p_fecha_fin,
        estado = p_estado
    WHERE id_proyecto = p_id_proyecto;
END;
$$;

-- Eliminar un proyecto
CREATE OR REPLACE PROCEDURE eliminar_proyecto(p_id_proyecto INT)
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM Proyectos WHERE id_proyecto = p_id_proyecto;
END;
$$;

-- Procedimientos Almacenados para Asignaciones de Proyectos
-- Guardar una asignación
CREATE OR REPLACE PROCEDURE guardar_asignacion_proyecto(
    p_id_proyecto INT,
    p_id_usuario INT,
    p_rol_en_proyecto VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO Asignaciones_Proyectos (id_proyecto, id_usuario, rol_en_proyecto)
    VALUES (p_id_proyecto, p_id_usuario, p_rol_en_proyecto);
END;
$$;

-- Eliminar una asignación
CREATE OR REPLACE PROCEDURE eliminar_asignacion_proyecto(p_id_asignacion INT)
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM Asignaciones_Proyectos WHERE id_asignacion = p_id_asignacion;
END;
$$;

-- Procedimientos para Reportes
-- Reporte de proyectos por cliente
CREATE OR REPLACE FUNCTION obtener_proyectos_por_cliente(p_id_cliente INT)
RETURNS TABLE (
    id_proyecto INT,
    nombre_proyecto VARCHAR,
    nombre_cliente VARCHAR,
    fecha_inicio DATE,
    fecha_fin DATE,
    estado VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        p.id_proyecto,
        p.nombre_proyecto,
        c.nombre_empresa AS nombre_cliente,
        p.fecha_inicio,
        p.fecha_fin,
        p.estado
    FROM Proyectos p
    JOIN Clientes c ON p.id_cliente = c.id_cliente
    WHERE p.id_cliente = p_id_cliente;
END;
$$;

-- Reporte de asignaciones por usuario
CREATE OR REPLACE FUNCTION obtener_asignaciones_por_usuario(p_id_usuario INT)
RETURNS TABLE (
    id_proyecto INT,
    nombre_proyecto VARCHAR,
    nombre_usuario VARCHAR,
    rol_en_proyecto VARCHAR,
    fecha_asignacion TIMESTAMP
)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        p.id_proyecto,
        p.nombre_proyecto,
        CONCAT(u.nombre, ' ', u.apellido) AS nombre_usuario,
        ap.rol_en_proyecto,
        ap.fecha_asignacion
    FROM Asignaciones_Proyectos ap
    JOIN Proyectos p ON ap.id_proyecto = p.id_proyecto
    JOIN Usuarios u ON ap.id_usuario = u.id_usuario
    WHERE ap.id_usuario = p_id_usuario;
END;
$$;

-- Reporte de proyectos por rango de fechas
CREATE OR REPLACE FUNCTION obtener_proyectos_por_rango_fechas(p_fecha_inicio DATE, p_fecha_fin DATE)
RETURNS TABLE (
    id_proyecto INT,
    nombre_proyecto VARCHAR,
    nombre_cliente VARCHAR,
    fecha_inicio DATE,
    fecha_fin DATE,
    estado VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        p.id_proyecto,
        p.nombre_proyecto,
        c.nombre_empresa AS nombre_cliente,
        p.fecha_inicio,
        p.fecha_fin,
        p.estado
    FROM Proyectos p
    JOIN Clientes c ON p.id_cliente = c.id_cliente
    WHERE p.fecha_inicio BETWEEN p_fecha_inicio AND p_fecha_fin;
END;
$$;

select * from Clientes;
select * from Proyectos;
select * from Asignaciones_Proyectos;
INSERT INTO Clientes (nombre_empresa, correo, telefono, direccion) 
VALUES ('TecnoSoluciones', 'cliente@tecnosoluciones.com', '123456789', 'Calle 123');

INSERT INTO Proyectos (id_cliente, nombre_proyecto, descripcion, fecha_inicio, fecha_fin, estado)
VALUES (1, 'Proyecto 1', 'Desarrollo web', '2025-05-01', '2025-06-01', 'en_progreso');

INSERT INTO Asignaciones_Proyectos (id_proyecto, id_usuario, rol_en_proyecto)
VALUES (1, 1, 'Desarrollador');